package com.actionnow.knetwork.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KnowledgeItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeItemAllPropertiesEquals(KnowledgeItem expected, KnowledgeItem actual) {
        assertKnowledgeItemAutoGeneratedPropertiesEquals(expected, actual);
        assertKnowledgeItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeItemAllUpdatablePropertiesEquals(KnowledgeItem expected, KnowledgeItem actual) {
        assertKnowledgeItemUpdatableFieldsEquals(expected, actual);
        assertKnowledgeItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeItemAutoGeneratedPropertiesEquals(KnowledgeItem expected, KnowledgeItem actual) {
        assertThat(actual)
            .as("Verify KnowledgeItem auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeItemUpdatableFieldsEquals(KnowledgeItem expected, KnowledgeItem actual) {
        assertThat(actual)
            .as("Verify KnowledgeItem relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getTitleEn()).as("check titleEn").isEqualTo(expected.getTitleEn()))
            .satisfies(a -> assertThat(a.getExcerpt()).as("check excerpt").isEqualTo(expected.getExcerpt()))
            .satisfies(a -> assertThat(a.getExcerptEn()).as("check excerptEn").isEqualTo(expected.getExcerptEn()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getContentEn()).as("check contentEn").isEqualTo(expected.getContentEn()))
            .satisfies(a -> assertThat(a.getCategory()).as("check category").isEqualTo(expected.getCategory()))
            .satisfies(a -> assertThat(a.getCategoryEn()).as("check categoryEn").isEqualTo(expected.getCategoryEn()))
            .satisfies(a -> assertThat(a.getLevel()).as("check level").isEqualTo(expected.getLevel()))
            .satisfies(a -> assertThat(a.getLevelEn()).as("check levelEn").isEqualTo(expected.getLevelEn()))
            .satisfies(a -> assertThat(a.getAuthor()).as("check author").isEqualTo(expected.getAuthor()))
            .satisfies(a -> assertThat(a.getPublishedAt()).as("check publishedAt").isEqualTo(expected.getPublishedAt()))
            .satisfies(a -> assertThat(a.getReadTime()).as("check readTime").isEqualTo(expected.getReadTime()))
            .satisfies(a -> assertThat(a.getImage()).as("check image").isEqualTo(expected.getImage()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKnowledgeItemUpdatableRelationshipsEquals(KnowledgeItem expected, KnowledgeItem actual) {
        assertThat(actual)
            .as("Verify KnowledgeItem relationships")
            .satisfies(a -> assertThat(a.getTags()).as("check tags").isEqualTo(expected.getTags()));
    }
}
