package com.actionnow.knetwork.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaymentMethodAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentMethodAllPropertiesEquals(PaymentMethod expected, PaymentMethod actual) {
        assertPaymentMethodAutoGeneratedPropertiesEquals(expected, actual);
        assertPaymentMethodAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentMethodAllUpdatablePropertiesEquals(PaymentMethod expected, PaymentMethod actual) {
        assertPaymentMethodUpdatableFieldsEquals(expected, actual);
        assertPaymentMethodUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentMethodAutoGeneratedPropertiesEquals(PaymentMethod expected, PaymentMethod actual) {
        assertThat(actual)
            .as("Verify PaymentMethod auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentMethodUpdatableFieldsEquals(PaymentMethod expected, PaymentMethod actual) {
        assertThat(actual)
            .as("Verify PaymentMethod relevant properties")
            .satisfies(a -> assertThat(a.getValue()).as("check value").isEqualTo(expected.getValue()))
            .satisfies(a -> assertThat(a.getValueEn()).as("check valueEn").isEqualTo(expected.getValueEn()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentMethodUpdatableRelationshipsEquals(PaymentMethod expected, PaymentMethod actual) {
        // empty method
    }
}
