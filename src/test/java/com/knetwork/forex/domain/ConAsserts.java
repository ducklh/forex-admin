package com.knetwork.forex.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ConAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConAllPropertiesEquals(Con expected, Con actual) {
        assertConAutoGeneratedPropertiesEquals(expected, actual);
        assertConAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConAllUpdatablePropertiesEquals(Con expected, Con actual) {
        assertConUpdatableFieldsEquals(expected, actual);
        assertConUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConAutoGeneratedPropertiesEquals(Con expected, Con actual) {
        assertThat(actual)
            .as("Verify Con auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConUpdatableFieldsEquals(Con expected, Con actual) {
        assertThat(actual)
            .as("Verify Con relevant properties")
            .satisfies(a -> assertThat(a.getText()).as("check text").isEqualTo(expected.getText()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConUpdatableRelationshipsEquals(Con expected, Con actual) {
        assertThat(actual)
            .as("Verify Con relationships")
            .satisfies(a -> assertThat(a.getBroker()).as("check broker").isEqualTo(expected.getBroker()));
    }
}
